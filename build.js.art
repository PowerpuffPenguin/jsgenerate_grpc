#!/usr/bin/env node
"use strict";
const { Command } = require('./js-build/commander')
const { Append } = require('./js-build/lib/utils')
const { Build, BuildTest } = require('./js-build/lib/build')
const { BuildGRPC } = require('./js-build/lib/grpc')
const Name = '{{project}}'
const TestBench = [
    'utils'
]
const TestUnit = Append(TestBench)
const program = new Command('./build.js')
const Arch = ['amd64', '386']
Build(program, 'linux', Arch,
    Name, '',
    `${Name}.jsonnet`,
)
Build(program, 'freebsd', Arch,
    Name, '',
    `${Name}.jsonnet`,
)
Build(program, 'darwin', Arch,
    Name, '',
    `${Name}.jsonnet`,
)
Build(program, 'windows', Arch,
    Name, '.exe',
    `${Name}.jsonnet`,
)

{{if gin}}
program.command('source')
    .description('build static source to golang code')
    .action(() => {
        console.log('source')
    }){{/if}}

BuildTest(program, '{{pkg}}', TestUnit, TestBench)
BuildGRPC(program, '{{pkg}}', '{{uuid}}', {{gateway}}, {{gin}})
program.parse(process.argv)